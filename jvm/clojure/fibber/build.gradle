plugins {
    id 'gradle-clojure.clojure' version '0.5.0-alpha.1'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'com.github.spotbugs' version '1.6.9'
    id 'org.sonarqube' version '2.7'
}

apply plugin: 'gradle-clojure.clojure'
apply plugin: 'checkstyle'
apply plugin: 'com.github.spotbugs'
apply plugin: 'pmd'
apply plugin: 'jacoco'

compileJava {
    options.compilerArgs << '-Xlint:all'
}

clojure {
    builds {
        main {
            aotAll()
        }
    }
}

checkstyle {
    configFile = "${rootProject.projectDir}/config/checkstyle/checkstyle.xml" as File
    configProperties = [configDir: "${rootProject.projectDir}/config"]
}

spotbugs {
    sourceSets = [sourceSets.main]
    excludeFilter = file("${rootProject.projectDir}/config/spotbugs/exclude.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    consoleOutput = true
    ruleSets = [] // Replace; Don't append
    ruleSetFiles = files("config/pmd/rulesets.xml")
}

pmd { consoleOutput = true }

jar {
    manifest {
        attributes 'Main-Class': 'us.yellosoft.fibber'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://clojars.org/repo' }
}

dependencies {
    compile 'org.clojure:clojure:1.7.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.12'
}
